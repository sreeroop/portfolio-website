import { useEffect, useState } from 'react'
import Head from 'next/head'
import { AppBar, Typography, Grid, Box, IconButton, Toolbar } from '@mui/material'
import styles from '../styles/Home.module.css'
import ProjectCard from '../components/ProjectCard'
import ToolStrip from '../components/ToolStrip'
import ExperienceStrip from '../components/ExperienceStrip'
import Landing from '../components/Landing'
import { tools } from '../data/data'
import { collection, getDocs } from 'firebase/firestore'
import { db } from '../backend/firebase'
import { useTheme } from "next-themes";
import { styled } from '@mui/material/styles';
import Switch from '@mui/material/Switch';
import { Globals } from "@react-spring/shared";
import { Canvas } from '@react-three/fiber'
import Model from '../components/Avatar'
import { OrbitControls } from '@react-three/drei'
import Link from 'next/link'

const MUISwitch = styled(Switch)(({ theme }) => ({
  width: 62,
  height: 34,
  padding: 7,
  '& .MuiSwitch-switchBase': {
    margin: 1,
    padding: 0,
    transform: 'translateX(6px)',
    '&.Mui-checked': {
      color: '#fff',
      transform: 'translateX(22px)',
      '& .MuiSwitch-thumb:before': {
        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 20 20"><path fill="${encodeURIComponent(
          '#fff',
        )}" d="M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z"/></svg>')`,
      },
      '& + .MuiSwitch-track': {
        opacity: 1,
        backgroundColor: theme?.palette?.mode === 'dark' ? '#8796A5' : '#aab4be',
      },
    },
  },
  '& .MuiSwitch-thumb': {
    backgroundColor: theme?.palette?.mode === 'dark' ? '#003892' : '#001e3c',
    width: 32,
    height: 32,
    '&:before': {
      content: "''",
      position: 'absolute',
      width: '100%',
      height: '100%',
      left: 0,
      top: 0,
      backgroundRepeat: 'no-repeat',
      backgroundPosition: 'center',
      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 20 20"><path fill="${encodeURIComponent(
        '#fff',
      )}" d="M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z"/></svg>')`,
    },
  },
  '& .MuiSwitch-track': {
    opacity: 1,
    backgroundColor: theme?.palette?.mode === 'dark' ? '#8796A5' : '#aab4be',
    borderRadius: 20 / 2,
  },
}));

export default function Home() {

  Globals.assign({
    frameLoop: "always",
  });
  const { theme, resolvedTheme, setTheme } = useTheme();
  const [projects, setProjects] = useState([])
  const [experiences, setExperiences] = useState([])

  const fetchProject = async () => {
    const query = collection(db, `projects`)
    const resData = await getDocs(query)
    setProjects([])
    resData.docs.forEach(doc => {
      setProjects(projects => [...projects, doc.data()])
    })
  }
  const fetchExperience = async () => {
    const query = collection(db, `experiences
    `)
    const resData = await getDocs(query)
    resData.docs.forEach(doc => {
      setExperiences(experience => [...experience, doc.data()])
    })
  }

  useEffect(() => {
    fetchProject()
    fetchExperience()
  }, [])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppBar sx={{ position: 'fixed', left: 0, top: 0, display: 'flex', justifyContent: 'space-between', flexDirection: 'row', alignItems: 'center', height: '10vh', width: '100vw' }}>
        <IconButton>
          <img src='/logo.svg' style={{ width: '50px', height: '50px' }} />
        </IconButton>
        <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', flexDirection: 'row', alignItems: 'center', width: '30vw' }}>
          <Link href="#experience">Experience</Link>
          <Link href="#skills">Skills</Link>
          <Link href="#projects">Projects</Link>
          <MUISwitch checked={resolvedTheme === "dark"} onClick={() => setTheme(resolvedTheme === "light" ? "dark" : "light")} />
        </Toolbar>
      </AppBar>
      <Grid container sx={{ display: 'flex', flexDirection: 'column', maxWidth: '100vw', overflowX: 'hidden' }}>
        <Grid item sx={{ minHeight: '100vh', position: 'relative', display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center' }}>
          {/* <Landing /> */}
          {/* <Grid sx={{ height: '100vh', width: '100%', backdropFilter: 'blur(2px)', position: 'absolute', top: 0, display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}> */}
          <Box sx={{ minWidth: '400px' }}>
            <Typography variant='h2' sx={{ margin: 'auto' }}>HiiðŸ‘‹ðŸ‘‹</Typography>
            <Typography variant='h3' sx={{ margin: 'auto' }}>I'm Sreeroop</Typography>
          </Box>
          <Box sx={{ minWidth: '400px', minHeight: '400px' }}>
            <Canvas
              colorManagement
              shadowMap
              camera={{ position: [1, 1, 10], fov: 60 }}
              style={{ width: '400px', height: '400px' }}>
              <ambientLight intensity={0.3} />
              {/* Our main source of light, also casting our shadow */}
              <directionalLight
                castShadow
                position={[0, 10, 0]}
                intensity={1.5}
                shadow-mapSize-width={1024}
                shadow-mapSize-height={1024}
                shadow-camera-far={50}
                shadow-camera-left={-10}
                shadow-camera-right={10}
                shadow-camera-top={10}
                shadow-camera-bottom={-10}
              />
              {/* A light to help illumnate the spinning boxes */}
              <pointLight position={[-10, 0, -20]} intensity={0.5} />
              <pointLight position={[0, -10, 0]} intensity={1.5} />
              <Model />
              <OrbitControls />
            </Canvas>

          </Box>

          {/* </Grid> */}
        </Grid>

        <Grid item sx={{ minHeight: '10vh', width: '110vw', margin: 'auto', textAlign: 'center' }}>
          <Typography variant='h3' sx={{ margin: 'auto' }}>My Experience</Typography>
          {
            experiences.map((experience, index) => {
              return <ExperienceStrip key={index} data={experience} />
            })
          }
        </Grid>
        <Grid item sx={{ minHeight: '100vh', width: '110vw', margin: 'auto' }}>
          <ToolStrip />
        </Grid>

        <Grid item sx={{ minHeight: '100vh', width: '100vw', alignItems: 'center', padding: '20px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', justifyContent: 'space-around', flexDirection: 'column', }}>
          <Typography variant='h3' sx={{ margin: 'auto' }}>My Projects</Typography>
          <Grid sx={{ display: 'flex', alignItems: 'center', flexWrap: 'wrap', justifyContent: 'space-around', flexDirection: 'row', }}>
            {
              projects.map(project => {
                return <ProjectCard key={project?.slug} data={project} />
              })
            }
          </Grid>
        </Grid>


      </Grid >
    </>
  )
}
